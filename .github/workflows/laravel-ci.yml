name: Laravel 11

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # ---------------------------
  # BACKEND: TESTS (Laravel)
  # ---------------------------
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, sqlite3, curl, dom, fileinfo, gd, pdo, tokenizer

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 775 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute Laravel Tests (PHPUnit/Pest)
        env:
          APP_ENV: testing
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test

  # ---------------------------
  # FRONTEND: TESTS (Vue / Vitest)
  # ---------------------------
  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run Vitest (coverage)
        run: npm run test:coverage

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

      - name: Build Frontend (optional)
        run: npm run build

  # ---------------------------
  # BACKEND: Lint (optional)
  # ---------------------------
  backend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
      - name: Run Laravel Pint (check mode)
        run: vendor/bin/pint

  # ---------------------------
  # FRONTEND: Lint (optional)
  # ---------------------------
  frontend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  # ---------------------------
  # FINAL META JOB (summary)
  # ---------------------------
  final-summary:
    needs: [backend-tests, frontend-tests, backend-lint, frontend-lint]
    runs-on: ubuntu-latest
    steps:
      - name: All jobs completed ðŸŽ‰
        run: |
          echo "âœ… Backend tests passed"
          echo "âœ… Frontend tests passed"
          echo "âœ… Backend lint passed"
          echo "âœ… Frontend lint passed"
